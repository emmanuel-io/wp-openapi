paths:
  /wp/v2/tags:
    get:
      tags:
      - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/TagResponse'
      parameters:
      - $ref: '../components.yaml#/components/parameters/QueryParameterContext'
      - $ref: '../components.yaml#/components/parameters/QueryParameterPage'
      - $ref: '../components.yaml#/components/parameters/QueryParameterPerPage'
      - name: search
        in: query
        description: Limit results to those matching a string.
        required: false
        schema: {}
      - name: exclude
        in: query
        description: Ensure result set excludes specific IDs.
        required: false
        schema:
          items:
            type: integer
      - name: include
        in: query
        description: Limit result set to specific IDs.
        required: false
        schema:
          items:
            type: integer
      - name: offset
        in: query
        description: Offset the result set by a specific number of items.
        required: false
        schema: {}
      - $ref: '../components.yaml#/components/parameters/QueryParameterOrder'
        schema:
          default: asc
      - name: orderby
        in: query
        description: Sort collection by term attribute.
        required: false
        schema:
          default: name
          enum:
          - id
          - include
          - name
          - slug
          - include_slugs
          - term_group
          - description
          - count
      - name: hide_empty
        in: query
        description: Whether to hide terms not assigned to any posts.
        required: false
        schema: {}
      - name: post
        in: query
        description: Limit result set to terms assigned to a specific post.
        required: false
        schema: {}
      - name: slug
        in: query
        description: Limit result set to terms with one or more specific slugs.
        required: false
        schema:
          items:
            type: string
    post:
      tags:
      - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/TagResponse'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  description: HTML description of the term.
                  type: string
                name:
                  description: HTML title for the term.
                  type: string
                  # required: true
                slug:
                  description: An alphanumeric identifier for the term unique to its
                    type.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
              required:
              - name
  /wp/v2/tags/{id}:
    get:
      tags:
      - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/TagResponse'
      parameters:
      - $ref: '../components.yaml#/components/parameters/PathParameterId'
      - $ref: '../components.yaml#/components/parameters/QueryParameterContext'
    post:
      tags:
      - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/TagResponse'
      parameters:
      - $ref: '../components.yaml#/components/parameters/PathParameterId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  description: HTML description of the term.
                  type: string
                name:
                  description: HTML title for the term.
                  type: string
                slug:
                  description: An alphanumeric identifier for the term unique to its
                    type.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
    put:
      tags:
      - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/TagResponse'
      parameters:
      - $ref: '../components.yaml#/components/parameters/PathParameterId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  description: HTML description of the term.
                  type: string
                name:
                  description: HTML title for the term.
                  type: string
                slug:
                  description: An alphanumeric identifier for the term unique to its
                    type.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
    patch:
      tags:
      - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/TagResponse'
      parameters:
      - $ref: '../components.yaml#/components/parameters/PathParameterId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  description: HTML description of the term.
                  type: string
                name:
                  description: HTML title for the term.
                  type: string
                slug:
                  description: An alphanumeric identifier for the term unique to its
                    type.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
    delete:
      tags:
      - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/TagResponse'
      parameters:
      - $ref: '../components.yaml#/components/parameters/PathParameterId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                force:
                  description: Required to be true, as terms do not support trashing.
                  default: false
                  type: boolean
