paths:
  /wp/v2/comments:
    get:
      tags:
      - comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/CommentResponse'
      parameters:
      - $ref: '../components.yaml#/components/parameters/QueryParameterContext'
      - $ref: '../components.yaml#/components/parameters/QueryParameterPage'
      - $ref: '../components.yaml#/components/parameters/QueryParameterPerPage'
      - name: search
        in: query
        description: Limit results to those matching a string.
        required: false
        schema: {}
      - name: after
        in: query
        description: Limit response to comments published after a given ISO8601 compliant
          date.
        required: false
        schema:
          format: date-time
      - name: author
        in: query
        description: Limit result set to comments assigned to specific user IDs. Requires
          authorization.
        required: false
        schema:
          items:
            type: integer
      - name: author_exclude
        in: query
        description: Ensure result set excludes comments assigned to specific user
          IDs. Requires authorization.
        required: false
        schema:
          items:
            type: integer
      - name: author_email
        in: query
        description: Limit result set to that from a specific author email. Requires
          authorization.
        required: false
        schema:
          format: email
      - name: before
        in: query
        description: Limit response to comments published before a given ISO8601 compliant
          date.
        required: false
        schema:
          format: date-time
      - name: exclude
        in: query
        description: Ensure result set excludes specific IDs.
        required: false
        schema:
          items:
            type: integer
      - name: include
        in: query
        description: Limit result set to specific IDs.
        required: false
        schema:
          items:
            type: integer
      - name: offset
        in: query
        description: Offset the result set by a specific number of items.
        required: false
        schema: {}
      - $ref: '../components.yaml#/components/parameters/QueryParameterOrder'
      - name: orderby
        in: query
        description: Sort collection by comment attribute.
        required: false
        schema:
          default: date_gmt
          enum:
          - date
          - date_gmt
          - id
          - include
          - post
          - parent
          - type
      - name: parent
        in: query
        description: Limit result set to comments of specific parent IDs.
        required: false
        schema:
          items:
            type: integer
      - name: parent_exclude
        in: query
        description: Ensure result set excludes specific parent IDs.
        required: false
        schema:
          items:
            type: integer
      - name: post
        in: query
        description: Limit result set to comments assigned to specific post IDs.
        required: false
        schema:
          items:
            type: integer
      - name: status
        in: query
        description: Limit result set to comments assigned a specific status. Requires
          authorization.
        required: false
        schema:
          default: approve
      - name: type
        in: query
        description: Limit result set to comments assigned a specific type. Requires
          authorization.
        required: false
        schema:
          default: comment
      - name: password
        in: query
        description: The password for the post if it is password protected.
        required: false
        schema: {}
    post:
      tags:
      - comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/CommentResponse'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                author:
                  description: The ID of the user object, if author was a user.
                  type: integer
                author_email:
                  description: Email address for the comment author.
                  type: string
                  format: email
                author_ip:
                  description: IP address for the comment author.
                  type: string
                  format: ip
                author_name:
                  description: Display name for the comment author.
                  type: string
                author_url:
                  description: URL for the comment author.
                  type: string
                  format: uri
                author_user_agent:
                  description: User agent for the comment author.
                  type: string
                content:
                  description: The content for the comment.
                  type: object
                  properties:
                    raw:
                      description: Content for the comment, as it exists in the database.
                      type: string
                      x-context:
                      - edit
                    rendered:
                      description: HTML content for the comment, transformed for display.
                      type: string
                      x-context:
                      - view
                      - edit
                      - embed
                      readOnly: true
                date:
                  description: The date the comment was published, in the site's timezone.
                  type: string
                  format: date-time
                date_gmt:
                  description: The date the comment was published, as GMT.
                  type: string
                  format: date-time
                parent:
                  description: The ID for the parent of the comment.
                  default: 0
                  type: integer
                post:
                  description: The ID of the associated post object.
                  default: 0
                  type: integer
                status:
                  description: State of the comment.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
  /wp/v2/comments/{id}:
    get:
      tags:
      - comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/CommentResponse'
      parameters:
      - name: id
        in: path
        description: Unique identifier for the comment.
        required: true
        schema: {}
      - $ref: '../components.yaml#/components/parameters/QueryParameterContext'
      - name: password
        in: query
        description: The password for the parent post of the comment (if the post
          is password protected).
        required: false
        schema: {}
    post:
      tags:
      - comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/CommentResponse'
      parameters:
      - name: id
        in: path
        description: Unique identifier for the comment.
        required: true
        schema: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                author:
                  description: The ID of the user object, if author was a user.
                  type: integer
                author_email:
                  description: Email address for the comment author.
                  type: string
                  format: email
                author_ip:
                  description: IP address for the comment author.
                  type: string
                  format: ip
                author_name:
                  description: Display name for the comment author.
                  type: string
                author_url:
                  description: URL for the comment author.
                  type: string
                  format: uri
                author_user_agent:
                  description: User agent for the comment author.
                  type: string
                content:
                  description: The content for the comment.
                  type: object
                  properties:
                    raw:
                      description: Content for the comment, as it exists in the database.
                      type: string
                      x-context:
                      - edit
                    rendered:
                      description: HTML content for the comment, transformed for display.
                      type: string
                      x-context:
                      - view
                      - edit
                      - embed
                      readOnly: true
                date:
                  description: The date the comment was published, in the site's timezone.
                  type: string
                  format: date-time
                date_gmt:
                  description: The date the comment was published, as GMT.
                  type: string
                  format: date-time
                parent:
                  description: The ID for the parent of the comment.
                  type: integer
                post:
                  description: The ID of the associated post object.
                  type: integer
                status:
                  description: State of the comment.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
    put:
      tags:
      - comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/CommentResponse'
      parameters:
      - name: id
        in: path
        description: Unique identifier for the comment.
        required: true
        schema: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                author:
                  description: The ID of the user object, if author was a user.
                  type: integer
                author_email:
                  description: Email address for the comment author.
                  type: string
                  format: email
                author_ip:
                  description: IP address for the comment author.
                  type: string
                  format: ip
                author_name:
                  description: Display name for the comment author.
                  type: string
                author_url:
                  description: URL for the comment author.
                  type: string
                  format: uri
                author_user_agent:
                  description: User agent for the comment author.
                  type: string
                content:
                  description: The content for the comment.
                  type: object
                  properties:
                    raw:
                      description: Content for the comment, as it exists in the database.
                      type: string
                      x-context:
                      - edit
                    rendered:
                      description: HTML content for the comment, transformed for display.
                      type: string
                      x-context:
                      - view
                      - edit
                      - embed
                      readOnly: true
                date:
                  description: The date the comment was published, in the site's timezone.
                  type: string
                  format: date-time
                date_gmt:
                  description: The date the comment was published, as GMT.
                  type: string
                  format: date-time
                parent:
                  description: The ID for the parent of the comment.
                  type: integer
                post:
                  description: The ID of the associated post object.
                  type: integer
                status:
                  description: State of the comment.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
    patch:
      tags:
      - comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/CommentResponse'
      parameters:
      - name: id
        in: path
        description: Unique identifier for the comment.
        required: true
        schema: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                author:
                  description: The ID of the user object, if author was a user.
                  type: integer
                author_email:
                  description: Email address for the comment author.
                  type: string
                  format: email
                author_ip:
                  description: IP address for the comment author.
                  type: string
                  format: ip
                author_name:
                  description: Display name for the comment author.
                  type: string
                author_url:
                  description: URL for the comment author.
                  type: string
                  format: uri
                author_user_agent:
                  description: User agent for the comment author.
                  type: string
                content:
                  description: The content for the comment.
                  type: object
                  properties:
                    raw:
                      description: Content for the comment, as it exists in the database.
                      type: string
                      x-context:
                      - edit
                    rendered:
                      description: HTML content for the comment, transformed for display.
                      type: string
                      x-context:
                      - view
                      - edit
                      - embed
                      readOnly: true
                date:
                  description: The date the comment was published, in the site's timezone.
                  type: string
                  format: date-time
                date_gmt:
                  description: The date the comment was published, as GMT.
                  type: string
                  format: date-time
                parent:
                  description: The ID for the parent of the comment.
                  type: integer
                post:
                  description: The ID of the associated post object.
                  type: integer
                status:
                  description: State of the comment.
                  type: string
                meta:
                  description: Meta fields.
                  type: object
                  # properties: []
    delete:
      tags:
      - comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/schemas/CommentResponse'
      parameters:
      - name: id
        in: path
        description: Unique identifier for the comment.
        required: true
        schema: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                force:
                  description: Whether to bypass Trash and force deletion.
                  default: false
                  type: boolean
                password:
                  description: The password for the parent post of the comment (if
                    the post is password protected).
                  type: string
